type Teacher {
    id: String!
    name: String!
    surname: String!
    email: String
    tel: String
    address: String
    subject: String!
}

type GradeRemoveResult {
    removeCount: Int!
    successful: Boolean!
    removed: Grade
    errors: String
}

type Grade {
    id: String!
    studentID: String!
    teacherID: String!
    value: Float!
    dateTime: Int!
    description: String
}

input StudentInput {
    name: String!
    surname: String!
    birthDate: Int!
    email: String
    tel: String
}

input GradeInput {
    studentID: String!
    teacherID: String!
    value: Float!
    dateTime: Int!
    description: String
}

input TeacherInput {
    name: String!
    surname: String!
    email: String
    tel: String
    address: String
    subject: String!
}

type Student {
    id: String!
    name: String!
    surname: String!
    birthDate: Int!
    email: String
    tel: String
}

type Query {
    students(name: String, surname: String): [Student!]!
    student(id: String!): Student

    teachers(name: String, surname: String): [Teacher!]!
    teacher(id: String!): Teacher

    grades(studentID: String!): [Grade!]!
    grade(id: String!): Grade
}

type Mutation {
    add_student(input: StudentInput!): Student!
    add_grade(in: GradeInput!): Grade!
    add_teacher(in: TeacherInput!): Teacher!

    update_grade(grade: GradeInput!): Grade

    remove_student(id: String!): Student
    remove_grade(id: String!): GradeRemoveResult
    remove_teacher(id: String!): Teacher
}